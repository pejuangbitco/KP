-- MySQL Script generated by MySQL Workbench
-- Fri Dec 21 16:47:20 2018
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema opid
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema opid
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `opid` DEFAULT CHARACTER SET utf8 ;
USE `opid` ;

-- -----------------------------------------------------
-- Table `opid`.`lokasi`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `opid`.`lokasi` (
  `id_lokasi` INT NOT NULL AUTO_INCREMENT,
  `nama_lokasi` VARCHAR(255) NOT NULL,
  `kota` VARCHAR(100) NOT NULL,
  `provinsi` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`id_lokasi`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `opid`.`kategori`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `opid`.`kategori` (
  `id_kategori` INT NOT NULL AUTO_INCREMENT,
  `nama_kategori` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_kategori`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `opid`.`admin_opid`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `opid`.`admin_opid` (
  `id_admin` INT NOT NULL AUTO_INCREMENT,
  `nama_admin` VARCHAR(45) NOT NULL,
  `email_admin` VARCHAR(65) NOT NULL,
  `password_admin` VARCHAR(128) NOT NULL,
  `foto_admin` VARCHAR(128) NOT NULL,
  `role` INT(1) NOT NULL,
  PRIMARY KEY (`id_admin`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `opid`.`seller`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `opid`.`seller` (
  `id_seller` INT NOT NULL AUTO_INCREMENT,
  `nama_seller` VARCHAR(95) NOT NULL,
  `deskripsi_seller` MEDIUMTEXT NOT NULL,
  `foto_seller` VARCHAR(128) NOT NULL,
  `lokasi_id_lokasi` INT NOT NULL,
  PRIMARY KEY (`id_seller`),
  INDEX `fk_seller_lokasi1_idx` (`lokasi_id_lokasi` ASC) ,
  CONSTRAINT `fk_seller_lokasi1`
    FOREIGN KEY (`lokasi_id_lokasi`)
    REFERENCES `opid`.`lokasi` (`id_lokasi`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `opid`.`produk`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `opid`.`produk` (
  `id_produk` INT NOT NULL AUTO_INCREMENT,
  `created_at` DATE NOT NULL,
  `updated_at` DATE NOT NULL,
  `harga` VARCHAR(45) NOT NULL,
  `kuota` INT NOT NULL,
  `open` DATE NOT NULL,
  `close` DATE NOT NULL,
  `nama_produk` VARCHAR(65) NOT NULL,
  `deskripsi_produk` MEDIUMTEXT NOT NULL,
  `admin_id_admin` INT NOT NULL,
  `seller_id_seller` INT NOT NULL,
  `kategori_id_kategori` INT NOT NULL,
  PRIMARY KEY (`id_produk`),
  INDEX `fk_produk_admin1_idx` (`admin_id_admin` ASC) ,
  INDEX `fk_produk_seller1_idx` (`seller_id_seller` ASC) ,
  INDEX `fk_produk_kategori1_idx` (`kategori_id_kategori` ASC) ,
  CONSTRAINT `fk_produk_admin1`
    FOREIGN KEY (`admin_id_admin`)
    REFERENCES `opid`.`admin_opid` (`id_admin`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_produk_seller1`
    FOREIGN KEY (`seller_id_seller`)
    REFERENCES `opid`.`seller` (`id_seller`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_produk_kategori1`
    FOREIGN KEY (`kategori_id_kategori`)
    REFERENCES `opid`.`kategori` (`id_kategori`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `opid`.`kontak_seller`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `opid`.`kontak_seller` (
  `id_kontak_seller` INT NOT NULL AUTO_INCREMENT,
  `no_hp` VARCHAR(12) NOT NULL,
  `wa` VARCHAR(45) NULL,
  `ig` VARCHAR(45) NULL,
  `fb` VARCHAR(45) NULL,
  `seller_id_seller` INT NOT NULL,
  PRIMARY KEY (`id_kontak_seller`),
  INDEX `fk_kontak_seller_seller1_idx` (`seller_id_seller` ASC) ,
  CONSTRAINT `fk_kontak_seller_seller1`
    FOREIGN KEY (`seller_id_seller`)
    REFERENCES `opid`.`seller` (`id_seller`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `opid`.`image_produk`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `opid`.`image_produk` (
  `id_image_produk` INT NOT NULL AUTO_INCREMENT,
  `image` VARCHAR(128) NOT NULL,
  `produk_id_produk` INT NOT NULL,
  PRIMARY KEY (`id_image_produk`),
  INDEX `fk_image_produk_produk1_idx` (`produk_id_produk` ASC) ,
  CONSTRAINT `fk_image_produk_produk1`
    FOREIGN KEY (`produk_id_produk`)
    REFERENCES `opid`.`produk` (`id_produk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `opid` ;

-- -----------------------------------------------------
-- procedure AdminAddorEdit
-- -----------------------------------------------------

DELIMITER $$
USE `opid`$$
CREATE PROCEDURE AdminAddorEdit (
IN _id_admin INT,
IN _nama_admin varchar(45),
IN _email_admin varchar(65),
IN _password_admin varchar(128),
IN _foto_admin varchar(128),
IN _role INT
)

BEGIN
	IF _id_admin = 0 THEN
		INSERT INTO admin_opid(nama_admin, email_admin, password_admin, foto_admin, role)
		VALUES ( _nama_admin, _email_admin, _password_admin, _foto_admin, _role);

		SET _id_admin = LAST_INSERT_ID();
	ELSE
		UPDATE admin_opid
		SET
		nama_admin = _nama_admin,
		email_admin = email_admin,
		password_admin = password_admin,
		foto_admin = _foto_admin, 
		role = _role
		WHERE id_admin = _id_admin;
	END IF;

	SELECT _id_admin AS 'id_admin';
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure LokasiAddorEdit
-- -----------------------------------------------------

DELIMITER $$
USE `opid`$$
CREATE PROCEDURE LokasiAddorEdit (
IN _id_lokasi INT,
IN _nama_lokasi varchar(255),
IN _kota varchar(100),
IN _provinsi varchar(100)
)

BEGIN
	IF _id_lokasi = 0 THEN
		INSERT INTO lokasi(nama_lokasi, kota, provinsi)
		VALUES ( _nama_lokasi, _kota, _provinsi);

		SET _id_lokasi = LAST_INSERT_ID();
	ELSE
		UPDATE lokasi
		SET
		nama_lokasi = _nama_lokasi,
		kota = _kota, 
		provinsi = _provinsi
		WHERE id_lokasi = _id_lokasi;
	END IF;

	SELECT _id_lokasi AS 'id_lokasi';
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure SellerAddorEdit
-- -----------------------------------------------------

DELIMITER $$
USE `opid`$$
CREATE PROCEDURE SellerAddorEdit (
IN _id_seller INT,
IN _nama_seller varchar(255),
IN _deskripsi_seller MEDIUMTEXT,
IN _foto_seller varchar(128),
IN _lokasi_id_lokasi INT
)

BEGIN
	IF _id_seller = 0 THEN
		INSERT INTO seller(nama_seller, deskripsi_seller, foto_seller, lokasi_id_lokasi)
		VALUES ( _nama_seller, _deskripsi_seller, _foto_seller, _lokasi_id_lokasi);

		SET _id_seller = LAST_INSERT_ID();
	ELSE
		UPDATE seller
		SET
		nama_seller = _nama_seller,
		deskripsi_seller = _deskripsi_seller,
		foto_seller = _foto_seller, 
		lokasi_id_lokasi = _lokasi_id_lokasi
		WHERE id_seller = _id_seller;
	END IF;

	SELECT _id_seller AS 'id_seller';
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure ProdukAddorEdit
-- -----------------------------------------------------

DELIMITER $$
USE `opid`$$
CREATE PROCEDURE ProdukAddorEdit (
IN _id_produk INT,
IN _created_at DATETIME,
IN _updated_at DATETIME,
IN _harga varchar(45),
IN _kuota INT,
IN _open DATE,
IN _close DATE,
IN _nama_produk varchar(65),
IN _deskripsi_produk MEDIUMTEXT,
IN _admin_id_admin INT,
IN _seller_id_seller INT,
IN _kategori_id_kategori INT
)

BEGIN
	IF _id_produk = 0 OR _id_produk IS NULL THEN
		INSERT INTO produk(harga, created_at, updated_at,kuota, open, close, nama_produk, deskripsi_produk, admin_id_admin, seller_id_seller, kategori_id_kategori)
		VALUES (_harga, _created_at, _updated_at, _kuota, _open, _close, _nama_produk,  _deskripsi_produk, _admin_id_admin, _seller_id_seller, _kategori_id_kategori);

		SET _id_produk = LAST_INSERT_ID();
	ELSE
		UPDATE produk
		SET		
		harga = _harga,
		kuota = _kuota,
		open = _open,
		close = _close,
		nama_produk = _nama_produk,
		deskripsi_produk = _deskripsi_produk,
		admin_id_admin = _admin_id_admin,
		seller_id_seller = _seller_id_seller,
		kategori_id_kategori = _kategori_id_kategori
		WHERE id_produk = _id_produk;
	END IF;

	SELECT _id_produk AS 'id_produk';
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure kategoriAddorEdit
-- -----------------------------------------------------

DELIMITER $$
USE `opid`$$
CREATE PROCEDURE `kategoriAddorEdit`(
IN _id_kategori INT,
IN _nama_kategori varchar(45)
)
BEGIN
	IF _id_kategori = 0 THEN
		INSERT INTO kategori(nama_kategori)
		VALUES ( _nama_kategori);

		SET _id_kategori = LAST_INSERT_ID();
	ELSE
		UPDATE kategori
		SET
		nama_kategori = _nama_kategori
		WHERE id_kategori = _id_kategori;
	END IF;

	SELECT _id_kategori AS 'id_kategori';
END$$

DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `opid`.`admin_opid`
-- -----------------------------------------------------
START TRANSACTION;
USE `opid`;
INSERT INTO `opid`.`admin_opid` (`id_admin`, `nama_admin`, `email_admin`, `password_admin`, `foto_admin`, `role`) VALUES (1, 'superadmin', 'admindev', 'devopenpo', '123', 1);

COMMIT;

